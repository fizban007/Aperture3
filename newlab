#!/bin/bash
name=$1
if [ -z $name ]; then
    echo "Need a lab name."
    exit 1
elif [[ -d $name ]]; then
    echo "ERROR: $name already exists."
    exit 1
else
    mkdir -p "labs/$name"
fi

if [ $? -ne 0 ]; then
    echo "Lab $name incomplete. Code 0001"
    exit 1
fi

cd "labs/$name"
Lab_Path=$(pwd)

# create delrun
printf "%s\n" \
    "#!/bin/bash"\
    "# This script works only under the current directory."\
    "# It deletes symlinks and their associated data directories."\
    "# To avoid any catastrophical event, deletable symlinks must begin with Data20, followed by 6 digits, followed by -, followed by 4 digits."\
    "regex='^Data20[0-9]{6}[-][0-9]{4}$'"\
    "for i in \"\$@\""\
    "do"\
    "    if [[ \$i =~ \$regex && -L \$i ]]; then # -L checks symlink"\
    "        rm -rf \$( cd \$i && pwd -P )"\
    "        rm \$i"\
    "    else"\
    "        echo \"Ignored deleteion of \$i\""\
    "    fi"\
    "done"\
    > delrun && chmod u+x delrun

# create run_cmake
printf "%s\n" \
    "#!/bin/bash"\
    "# This script works only under the current directory."\
    "opt=\$1"\
    "lab_dir=$Lab_Path"\
    ""\
    "if [ ! -z \$opt ] && [ \$opt = \"cmake\" ]; then"\
    "    # Run cmake with the correct definition of LAB_ROOT_DIR"\
    "    cd build"\
    "    shift"\
    "    cmake ../../.. -DLAB_ROOT_DIR=\$lab_dir -Dbuild_tests=OFF \$@"\
    "elif [ ! -z \$opt ] && [ \$opt = \"build\" ]; then"\
    "    cd build"\
    "    make"\
    "elif [ ! -z \$opt ] && [ \$opt = \"clean\" ]; then"\
    "    cd build"\
    "    if [ -f \"Makefile\" ]; then"\
    "        make clean"\
    "    fi"\
    "    rm -rf ./*"\
    "else"\
    "    # Argument not supplied, or just followed by cmake arguments, run"\
    "    # cmake if the build dir does not contain a makefile"\
    "    cd build"\
    "    if [ -f \"Makefile\" ]; then"\
    "        make"\
    "    else"\
    "        cmake ../../.. -DLAB_ROOT_DIR=\$lab_dir -Dbuild_tests=OFF \$@"\
    "    fi"\
    "fi"\
    > buick && chmod u+x buick

if [ $? -ne 0 ]; then
    echo "Lab $name incomplete. Code 0002"
    exit 1
fi

# create default stuff
mkdir build lib src
if [ $? -ne 0 ]; then
    echo "Lab $name incomplete. Code 0003"
    exit 1
fi

printf "%s\n" \
       "set(LAB_SHADOWS \"\")"\
       "set(LAB_NAME \"$name\")"\
       "list(APPEND LAB_SHADOWS \"main.cpp\")"\
       > src/CMakeLists.txt

cp ../../bin/config.toml ./
cp ../../src/main.cpp src/

if [ $? -ne 0 ]; then
    echo "Lab $name incomplete. Code 0004"
    exit 1
fi

echo -e "\e[1mLab $name\e[0m is successfully created."
# echo -e "Add \e[2m-LAB_DIR=$Lab_Path\e[0m in cmake to activate."
